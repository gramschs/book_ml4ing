Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.tree import plot_tree

plot_tree(modell)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[2], line 3[0m
[1;32m      1[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mtree[39;00m [38;5;28;01mimport[39;00m plot_tree
[0;32m----> 3[0m [43mplot_tree[49m[43m([49m[43mmodell[49m[43m)[49m

File [0;32m/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/sklearn/utils/_param_validation.py:211[0m, in [0;36mvalidate_params.<locals>.decorator.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    205[0m [38;5;28;01mtry[39;00m:
[1;32m    206[0m     [38;5;28;01mwith[39;00m config_context(
[1;32m    207[0m         skip_parameter_validation[38;5;241m=[39m(
[1;32m    208[0m             prefer_skip_nested_validation [38;5;129;01mor[39;00m global_skip_validation
[1;32m    209[0m         )
[1;32m    210[0m     ):
[0;32m--> 211[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    212[0m [38;5;28;01mexcept[39;00m InvalidParameterError [38;5;28;01mas[39;00m e:
[1;32m    213[0m     [38;5;66;03m# When the function is just a wrapper around an estimator, we allow[39;00m
[1;32m    214[0m     [38;5;66;03m# the function to delegate validation to the estimator, but we replace[39;00m
[1;32m    215[0m     [38;5;66;03m# the name of the estimator by the name of the function in the error[39;00m
[1;32m    216[0m     [38;5;66;03m# message to avoid confusion.[39;00m
[1;32m    217[0m     msg [38;5;241m=[39m re[38;5;241m.[39msub(
[1;32m    218[0m         [38;5;124mr[39m[38;5;124m"[39m[38;5;124mparameter of [39m[38;5;124m\[39m[38;5;124mw+ must be[39m[38;5;124m"[39m,
[1;32m    219[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mparameter of [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__qualname__[39m[38;5;132;01m}[39;00m[38;5;124m must be[39m[38;5;124m"[39m,
[1;32m    220[0m         [38;5;28mstr[39m(e),
[1;32m    221[0m     )

File [0;32m/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/sklearn/tree/_export.py:211[0m, in [0;36mplot_tree[0;34m(decision_tree, max_depth, feature_names, class_names, label, filled, impurity, node_ids, proportion, rounded, precision, ax, fontsize)[0m
[1;32m    196[0m check_is_fitted(decision_tree)
[1;32m    198[0m exporter [38;5;241m=[39m _MPLTreeExporter(
[1;32m    199[0m     max_depth[38;5;241m=[39mmax_depth,
[1;32m    200[0m     feature_names[38;5;241m=[39mfeature_names,
[0;32m   (...)[0m
[1;32m    209[0m     fontsize[38;5;241m=[39mfontsize,
[1;32m    210[0m )
[0;32m--> 211[0m [38;5;28;01mreturn[39;00m [43mexporter[49m[38;5;241;43m.[39;49m[43mexport[49m[43m([49m[43mdecision_tree[49m[43m,[49m[43m [49m[43max[49m[38;5;241;43m=[39;49m[43max[49m[43m)[49m

File [0;32m/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/sklearn/tree/_export.py:636[0m, in [0;36m_MPLTreeExporter.export[0;34m(self, decision_tree, ax)[0m
[1;32m    635[0m [38;5;28;01mdef[39;00m [38;5;21mexport[39m([38;5;28mself[39m, decision_tree, ax[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[0;32m--> 636[0m     [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m    637[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mtext[39;00m [38;5;28;01mimport[39;00m Annotation
[1;32m    639[0m     [38;5;28;01mif[39;00m ax [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

[0;31mModuleNotFoundError[0m: No module named 'matplotlib'

